import os
import random
from telegram import Update, User
from telegram.ext import Application, CommandHandler, ContextTypes
from data import next_image  # –±–µ—Ä—ë–º –ø—É—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤

# –¢–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ Secrets –Ω–∞ Fly: TOKEN
TOKEN = os.getenv("TOKEN")

EMOJI_POOL = list("‚ú®üåüüí´‚òÄÔ∏èüåàüî•üå∏‚≠êÔ∏èüåºüåªüåôüíéüíñüíöüíôüíúü§çü§é")

def pick_emoji() -> str:
    return random.choice(EMOJI_POOL)

def display_name(u: User) -> str:
    if getattr(u, "username", None):
        return f"@{u.username}"
    if getattr(u, "first_name", None):
        return u.first_name
    return "–¥—Ä—É–≥"

async def cmd_start(update: Update, _: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ö–æ–º–∞–Ω–¥–∞: /kompli ‚Äî –ò —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–≤–æ–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥–Ω—è ‚ú®")

async def cmd_kompli(update: Update, _: ContextTypes.DEFAULT_TYPE):
    try:
        img_path = next_image()
        name = display_name(update.effective_user)
        caption = f"{pick_emoji()} {name}, —Ç–≤–æ–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥–Ω—è!"

        with open(img_path, "rb") as f:
            await update.message.reply_photo(photo=f, caption=caption)
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞: {e}")

def main():
    if not TOKEN:
        raise SystemExit("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞. –ù–∞ Fly –∑–∞–¥–∞—ë—Ç—Å—è –≤ Secrets –∫–∞–∫ TOKEN.")

    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", cmd_start))
    app.add_handler(CommandHandler("kompli", cmd_kompli))

    print("‚úÖ Bot running‚Ä¶ –∫–æ–º–∞–Ω–¥–∞ /kompli (—ç–º–æ–¥–∑–∏ + username)")
    app.run_polling(drop_pending_updates=True)

if __name__ == "__main__":
    main()

