import os
import random
from pathlib import Path
from typing import List
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

TOKEN = os.getenv("TOKEN")  # –Ω–∞ fly.io –∑–∞–¥–∞—à—å —á–µ—Ä–µ–∑ fly secrets set TOKEN=...

# —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –ø–æ–¥–∫–ª—é—á–∞–µ–º –∏–∑ data.py
from data import IMAGES  

# —Å–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
EMOJI_POOL = ["‚ú®", "üåü", "üí´", "üî•", "‚òÄÔ∏è", "üåû", "üåà", "üíñ", "‚≠ê", "üéâ", "üöÄ"]

# –æ—á–µ—Ä–µ–¥—å –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ (—á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–∏—Å—å, –ø–æ–∫–∞ –≤—Å–µ –Ω–µ –ø–æ–∫–∞–∂–µ—Ç)
_image_queue: List[int] = []


def _reshuffle_images_if_needed():
    global _image_queue
    if not _image_queue:
        if not IMAGES:
            raise RuntimeError("‚ùå –°–ø–∏—Å–æ–∫ IMAGES –ø—É—Å—Ç. –ó–∞–ø–æ–ª–Ω–∏ –µ–≥–æ –≤ data.py –∏ –ø–æ–ª–æ–∂–∏ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É images/")
        _image_queue = list(range(len(IMAGES)))
        random.shuffle(_image_queue)


def pick_image_path() -> Path:
    _reshuffle_images_if_needed()
    idx = _image_queue.pop()
    p = Path(IMAGES[idx])
    if not p.exists():
        raise FileNotFoundError(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {p}")
    return p


def pick_caption(user) -> str:
    if getattr(user, "username", None):
        uname = f"@{user.username}"
    elif getattr(user, "first_name", None):
        uname = user.first_name
    else:
        uname = "–¥—Ä—É–≥"
    emoji = random.choice(EMOJI_POOL)
    return f"{emoji} {uname}, —Ç–≤–æ–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥–Ω—è!"


async def start(update: Update, _: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /kompli, –∏ —è –ø—Ä–∏—à–ª—é –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥–Ω—è üåü")


async def kompli(update: Update, _: ContextTypes.DEFAULT_TYPE):
    try:
        img = pick_image_path()
        caption = pick_caption(update.effective_user)
        with open(img, "rb") as f:
            await update.message.reply_photo(f, caption=caption)
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞: {e}")


def main():
    if not TOKEN:
        raise SystemExit("‚ùå –ù–µ—Ç TOKEN. –£—Å—Ç–∞–Ω–æ–≤–∏ —Å–µ–∫—Ä–µ—Ç: fly secrets set TOKEN=...")

    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("kompli", kompli))

    print("‚úÖ Bot running‚Ä¶ –∫–æ–º–∞–Ω–¥–∞ /kompli")
    app.run_polling(drop_pending_updates=True)


if __name__ == "__main__":
    main()
